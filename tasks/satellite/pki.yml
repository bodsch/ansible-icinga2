---

- name: assert missing salt
  assert:
    that:
      - icinga2_salt | length != 0
    msg: icinga2 salt is missing
    quiet: true

- name: define PKI facts
  set_fact:
    icinga2_pki_ca_key: "{{ icinga2_pki_dir }}/ca.key"
    icinga2_pki_ca_cert: "{{ icinga2_pki_dir }}/ca.crt"
    icinga2_pki_fqdn_key: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.key"
    icinga2_pki_fqdn_cert: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.crt"
    icinga2_pki_master_cert: "{{ icinga2_pki_dir }}/trusted-master.crt"

# compare checksum for ca.cert
#
- name: compare checksum for ca.cert
  # TODO
  # safe checksum into facts to speed-up this part
  block:
    - name: copy ca.crt from primary icinga2 master {{ icinga2_primary_master }}
      delegate_to: '{{ icinga2_primary_master }}'
      remote_user: "{{ ansible_user_id }}"
      fetch:
        src: "{{ icinga2_pki_ca_cert }}"
        dest: files/{{ icinga2_primary_master }}/ca.crt
        flat: true

    - name: check local ca.crt
      delegate_to: localhost
      become: false
      stat:
        path: "files/{{ icinga2_primary_master }}/ca.crt"
        checksum_algorithm: sha1
        get_checksum: true
      run_once: true
      register: primary_master_ca_file

    - name: check for existing '{{ icinga2_pki_ca_cert }}'
      stat:
        path: "{{ icinga2_pki_ca_cert }}"
        checksum_algorithm: sha1
        get_checksum: true
      register: satellite_ca_file

    - name: define fact for remove old certificates
      set_fact:
        icinga2_remove_old_cert: "{{ primary_master_ca_file.stat.checksum | string == satellite_ca_file.stat.checksum | string }}"
      when:
        - satellite_ca_file.stat.checksum is defined

    - name: remove old ca file from satellite
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /var/lib/icinga2/certs
        - /var/lib/icinga2/ca
      when:
        - satellite_ca_file.stat.checksum is defined
        - not icinga2_remove_old_cert

    - name: read facts from primary master '{{ icinga2_primary_master }}'"
      delegate_to: "{{ icinga2_primary_master }}"
      remote_user: "{{ ansible_user_id }}"
      setup:
        gather_subset:
          - '!all'
          - '!any'
          - facter

    - name: define icinga2 user from primary master '{{ icinga2_primary_master }}'"
      delegate_to: "{{ icinga2_primary_master }}"
      remote_user: "{{ ansible_user_id }}"
      set_fact:
        icinga2_master_user: "{{ ansible_local.icinga2.icinga2_user | default( icinga2_user ) }}"
        icinga2_master_group: "{{ ansible_local.icinga2.icinga2_group | default( icinga2_group ) }}"

    - name: re-read satellite facts
      setup:
        gather_subset:
          - '!all'
          - '!any'
          - facter

- name: create icinga2.conf
  template:
    src: etc/icinga2/icinga2.conf.j2
    dest: /etc/icinga2/icinga2.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: create constants.conf
  template:
    src: etc/icinga2/constants.conf.j2
    dest: /etc/icinga2/constants.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: create mainlog.conf
  template:
    src: etc/icinga2/features/mainlog.conf.j2
    dest: /etc/icinga2/features-available/mainlog.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: configure icinga2 api
  template:
    src: etc/icinga2/features/api.conf.j2
    dest: /etc/icinga2/features-available/api.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: "create '{{ icinga2_pki_dir }}'"
  file:
    dest: "{{ icinga2_pki_dir }}"
    state: directory
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0755

- name: "check for existing key '{{ icinga2_pki_fqdn_key }}'"
  stat:
    path: "{{ icinga2_pki_fqdn_key }}"
    checksum_algorithm: sha1
    get_checksum: true
  register: __satellite_key

# - name: "check for existing cert '{{ icinga2_pki_ca_cert }}'"
#   stat:
#     path: "{{ icinga2_pki_ca_cert }}"
#     checksum_algorithm: sha1
#     get_checksum: true
#   register: __ca_crt

- name: copy certificate to satellite
  block:
    - name: copy ca.crt to satellite
      copy:
        src: files/{{ icinga2_primary_master }}/ca.crt
        dest: "{{ icinga2_pki_ca_cert }}"
        owner: "{{ icinga2_user }}"
        group: "{{ icinga2_user }}"
        mode: 0666

    - name: "create a pki ticket at '{{ icinga2_primary_master }}'"
      icinga2_ticket:
        common_name: "{{ icinga2_certificate_cn }}"
        salt: "{{ icinga2_salt }}"
      register: ticket
      delegate_to: "{{ icinga2_primary_master }}"

    - name: define FQDN ticket
      set_fact:
        icinga2_fqdn_ticket: "{{ ticket.ticket }}"

    - name: wait for primary icinga2 master ({{ icinga2_primary_master }}) to be accessible
      # delegate_to: '{{ icinga2_primary_master }}'
      # remote_user: "{{ ansible_user_id }}"
      wait_for:
        host: '{{ icinga2_primary_master }}'
        port: "{{ icinga2_master_port | default(5665) }}"
        delay: 5
        connect_timeout: 3
        msg: "waiting for {{ icinga2_primary_master }}:5665 to be opened"
      ignore_errors: false
      retries: 3
      delay: 5

    - name: configure icinga2 secondary master pki
      become: true
      icinga2_node_setup:
        common_name: "{{ icinga2_certificate_cn }}"
        ca_key: "{{ icinga2_pki_ca_key }}"
        ticket: "{{ icinga2_fqdn_ticket }}"
        parent_icinga2_host: "{{ icinga2_primary_master }}"
        zone: "{{ ansible_fqdn }}"
        endpoint: "{{ icinga2_primary_master }}"
      when:
        - not __satellite_key.stat.exists
        - icinga2_fqdn_ticket is defined
      notify:
        - check configuration
        - restart icinga2

    - name: fix permissions for icinga2 pki directory
      file:
        path: "{{ icinga2_pki_dir }}"
        owner: "{{ icinga2_user }}"
        group: "{{ icinga2_user }}"
        recurse: true

  when:
    - not __satellite_key.stat.exists

- name: create zone entry under '/etc/icinga2/zones.d' on master '{{ icinga2_primary_master }}'
  delegate_to: "{{ icinga2_primary_master }}"
  remote_user: "{{ ansible_user_id }}"
  file:
    dest: /etc/icinga2/zones.d/{{ icinga2_satellite_zone }}
    state: directory
    owner: "{{ icinga2_master_user }}"
    group: "{{ icinga2_master_group }}"
    mode: 0755

# create on both masters!
- name: create zone file on master
  delegate_to: "{{ item.key }}"
  remote_user: "{{ ansible_user_id }}"
  template:
    src: etc/icinga2/satellite.conf.j2
    dest: /etc/icinga2/satellites.d/{{ icinga2_satellite_zone }}.conf
    owner: "{{ icinga2_master_user }}"
    group: "{{ icinga2_master_group }}"
    mode: 0666
  with_dict:
    "{{ icinga2_masters }}"
  notify:
    - reload icinga2 master config

- name: create host object file for satellite on master '{{ icinga2_primary_master }}'
  delegate_to: "{{ icinga2_primary_master }}"
  remote_user: "{{ ansible_user_id }}"
  template:
    src: etc/icinga2/zones.d/satellite.conf.j2
    dest: /etc/icinga2/zones.d/{{ icinga2_satellite_zone }}/{{ icinga2_certificate_cn }}.conf
    owner: "{{ icinga2_master_user }}"
    group: "{{ icinga2_master_group }}"
    mode: 0666
  notify:
    - reload icinga2 master config

- name: ensure that satellite has api connetions
  stat:
    path: "/var/lib/icinga2/api/zones/{{ icinga2_satellite_zone }}/_etc/{{ icinga2_certificate_cn }}.conf"
  register: __satellite_api_connections

- name: define icinga2_satellite_has_api_connection
  set_fact:
    icinga2_satellite_has_api_connection: "{{ __satellite_api_connections.stat.exists }}"

...
