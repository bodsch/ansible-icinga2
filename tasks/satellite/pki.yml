---

- name: assert missing salt
  assert:
    that:
      - icinga2_salt | length != 0
    msg: icinga2 salt is missing
    quiet: true

- name: set facts
  set_fact:
    icinga2_pki_ca_key: "{{ icinga2_pki_dir }}/ca.key"
    icinga2_pki_ca_cert: "{{ icinga2_pki_dir }}/ca.crt"
    icinga2_pki_fqdn_key: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.key"
    icinga2_pki_fqdn_cert: "{{ icinga2_pki_dir }}/{{ ansible_fqdn }}.crt"
    icinga2_pki_master_cert: "{{ icinga2_pki_dir }}/trusted-master.crt"

# compare checksum for ca.cert
#
- block:
    - name: copy ca.crt from primary icinga2 master {{ icinga2_primary_master }}
      remote_user: "{{ ansible_ssh_user }}"
      fetch:
        src: "{{ icinga2_pki_ca_cert }}"
        dest: files/{{ icinga2_primary_master }}/ca.crt
        flat: true
      delegate_to: '{{ icinga2_primary_master }}'

    - name: check local ca.crt
      stat:
        path: "files/{{ icinga2_primary_master }}/ca.crt"
        checksum_algorithm: sha1
        get_checksum: true
      become: false
      run_once: true
      delegate_to: localhost
      register: primary_master_ca_file

    - name: check for existing '{{ icinga2_pki_ca_cert }}'
      stat:
        path: "{{ icinga2_pki_ca_cert }}"
        checksum_algorithm: sha1
        get_checksum: true
      register: satellite_ca_file

    - name: set facts
      set_fact:
        icinga2_remove_old_cert: "{{ primary_master_ca_file.stat.checksum | string == satellite_ca_file.stat.checksum | string }}"
      when: satellite_ca_file.stat.checksum is defined

    - name: remove old ca file from satellite
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /var/lib/icinga2/certs
        - /var/lib/icinga2/ca
      when: satellite_ca_file.stat.checksum is defined and
        not icinga2_remove_old_cert

    - name: read facts from '{{ icinga2_primary_master }}'"
      remote_user: "{{ ansible_ssh_user }}"
      delegate_to: "{{ icinga2_primary_master }}"
      setup:
        gather_subset:
          - '!all'
          - '!any'
          - facter

    - name: get icinga2 user from '{{ icinga2_primary_master }}'"
      delegate_to: "{{ icinga2_primary_master }}"
      remote_user: "{{ ansible_ssh_user }}"
      set_fact:
        icinga2_master_user: "{{ ansible_local.icinga2.icinga2_user | default( icinga2_user ) }}"
        icinga2_master_group: "{{ ansible_local.icinga2.icinga2_group | default( icinga2_group ) }}"

    - name: read facts from '{{ ansible_fqdn }}'"
      setup:
        gather_subset:
          - '!all'
          - '!any'
          - facter

- name: create icinga2.conf
  template:
    src: etc/icinga2/icinga2.conf.j2
    dest: /etc/icinga2/icinga2.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: create constants.conf
  template:
    src: etc/icinga2/constants.conf.j2
    dest: /etc/icinga2/constants.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: create mainlog.conf
  template:
    src: etc/icinga2/features/mainlog.conf.j2
    dest: /etc/icinga2/features-available/mainlog.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: configure icinga2 api
  template:
    src: etc/icinga2/features/api.conf.j2
    dest: /etc/icinga2/features-available/api.conf
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0666

- name: "create '{{ icinga2_pki_dir }}'"
  file:
    dest: "{{ icinga2_pki_dir }}"
    state: directory
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0755

- name: "check if existing key '{{ icinga2_pki_fqdn_key }}'"
  stat:
    path: "{{ icinga2_pki_fqdn_key }}"
    checksum_algorithm: sha1
    get_checksum: true
  register: __satellite_key

- name: "check for existing '{{ icinga2_pki_ca_cert }}'"
  stat:
    path: "{{ icinga2_pki_ca_cert }}"
    checksum_algorithm: sha1
    get_checksum: true
  register: __ca_crt

- block:
    - name: "copy ca.crt to '{{ ansible_fqdn }}'"
      copy:
        src: files/{{ icinga2_primary_master }}/ca.crt
        dest: "{{ icinga2_pki_ca_cert }}"
        owner: "{{ icinga2_user }}"
        group: "{{ icinga2_user }}"
        mode: 0666

    - name: "create a pki ticket at '{{ icinga2_primary_master }}'"
      delegate_to: "{{ icinga2_primary_master }}"
      remote_user: "{{ ansible_ssh_user }}"
      shell: |
        icinga2 pki ticket --cn {{ icinga2_certificate_cn }}
      register: ticket
      when: icinga2_salt is defined

    - name: set facts
      set_fact:
        icinga2_fqdn_ticket: "{{ ticket.stdout }}"

    - name: configure icinga2 satellite pki
      command: "{{ item }}"
      with_items:
        - icinga2 pki new-cert
          --cn {{ icinga2_certificate_cn }}
          --key {{ icinga2_pki_fqdn_key }}
          --cert {{ icinga2_pki_fqdn_cert }}

        - icinga2 pki save-cert
          --key {{ icinga2_pki_fqdn_key }}
          --cert {{ icinga2_pki_fqdn_cert }}
          --trustedcert {{ icinga2_pki_master_cert }}
          --host {{ icinga2_primary_master }}

        - icinga2 pki request
          --host {{ icinga2_primary_master }}
          --port {{ icinga2_master_port | default(5665) }}
          --ticket {{ icinga2_fqdn_ticket }}
          --key {{ icinga2_pki_fqdn_key }}
          --cert {{ icinga2_pki_fqdn_cert }}
          --trustedcert {{ icinga2_pki_master_cert }}
          --ca {{ icinga2_pki_ca_key }}

        - icinga2 node setup
          --ticket {{ icinga2_fqdn_ticket }}
          --endpoint {{ icinga2_primary_master }}
          --zone {{ ansible_fqdn }}
          --parent_host {{ icinga2_primary_master }}
          --trustedcert {{ icinga2_pki_master_cert }}

      become: true
      when: not __satellite_key.stat.exists and ticket.stdout is defined
      notify:
        - check configuration
        - restart icinga2

    - name: fix permissions for icinga2 pki directory
      file:
        path: "{{ icinga2_pki_dir }}"
        owner: "{{ icinga2_user }}"
        group: "{{ icinga2_user }}"
        recurse: true

  when: not __satellite_key.stat.exists

- name: create zone entry under '/etc/icinga2/zones.d' on master '{{ icinga2_primary_master }}'
  delegate_to: "{{ icinga2_primary_master }}"
  remote_user: "{{ ansible_ssh_user }}"
  file:
    dest: /etc/icinga2/zones.d/{{ icinga2_satellite_zone }}
    state: directory
    owner: "{{ icinga2_master_user }}"
    group: "{{ icinga2_master_group }}"
    mode: 0755

# create on both masters!
- name: create zone file on master
  delegate_to: "{{ item.key }}"
  remote_user: "{{ ansible_ssh_user }}"
  template:
    src: etc/icinga2/satellite.conf.j2
    dest: /etc/icinga2/satellites.d/{{ icinga2_satellite_zone }}.conf
    owner: "{{ icinga2_master_user }}"
    group: "{{ icinga2_master_group }}"
    mode: 0666
  with_dict:
    "{{ icinga2_masters }}"
  notify:
    - restart icinga2 master

- name: create host object file for satellite on master '{{ icinga2_primary_master }}'
  delegate_to: "{{ icinga2_primary_master }}"
  remote_user: "{{ ansible_ssh_user }}"
  template:
    src: etc/icinga2/satellite-zone.conf.j2
    dest: /etc/icinga2/zones.d/{{ icinga2_satellite_zone }}/{{ icinga2_certificate_cn }}.conf
    owner: "{{ icinga2_master_user }}"
    group: "{{ icinga2_master_group }}"
    mode: 0666
  notify:
    - restart icinga2 master

- name: ensure that satellite has api connetions
  stat:
    path: "/var/lib/icinga2/api/zones/{{ icinga2_satellite_zone }}/_etc/{{ icinga2_certificate_cn }}.conf"
  register: __satellite_api_connections

- name: set facts
  set_fact:
    icinga2_satellite_has_api_connection: "{{ __satellite_api_connections.stat.exists }}"
