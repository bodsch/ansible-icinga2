---

- name: re-read ansible facts
  ansible.builtin.setup:

- name: include OS specific configuration
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian
        - "{{ ansible_os_family | lower }}.yml"
        - default.yml
      skip: true

- name: define primary icinga2 master
  delegate_to: localhost
  run_once: true
  ansible.builtin.set_fact:
    icinga2_primary_master: "{{ icinga2_masters | primary_master }}"

- name: assert missing primary master
  delegate_to: localhost
  run_once: true
  ansible.builtin.assert:
    that:
      - icinga2_primary_master | length != 0
    msg: primary icinga2 master is missing
    quiet: true

- name: assert wrong primary master
  delegate_to: localhost
  run_once: true
  ansible.builtin.assert:
    that: ansible_fqdn in (icinga2_masters | list) or
       icinga2_mode == 'master' and
       icinga2_primary_master == ansible_fqdn
    msg: primary icinga2 master is not identical with ansible_fqdn ('{{ icinga2_primary_master }}' vs. '{{ ansible_fqdn }}')
    quiet: true
  when:
    - icinga2_validate_primary_master
    - icinga2_mode == 'master'

- name: define satellite zone
  when:
    - icinga2_mode == 'satellite'
  block:
    - name: define satellite zone, when icinga2_satellites are configured
      ansible.builtin.set_fact:
        icinga2_satellite_zone: "{{ icinga2_satellites | icinga_satellite_zone(ansible_fqdn) }}"
      when:
        - icinga2_satellites is defined
        - icinga2_satellites | count > 0

    - name: define satellite zone, when icinga2_satellites are empty
      ansible.builtin.set_fact:
        icinga2_satellite_zone: "{{ ansible_fqdn }}"
      when:
        - icinga2_satellites is defined
        - icinga2_satellites | count == 0

- name: information
  ansible.builtin.debug:
    msg:
      - "fqdn           : {{ ansible_fqdn }}"
      - "mode           : {{ icinga2_mode }}"
      - "primary_master : {{ icinga2_primary_master }}"
      - "satellite_zone : {{ icinga2_satellite_zone | default({}) }}"
      - "certificate_cn : {{ icinga2_certificate_cn }}"
      - "masters        : {{ icinga2_masters | list }}"

# ----------------------------------------------------------------------------------

# read a present salt from ansible facts
#
- name: re-define icinga2_salt from local fact
  ansible.builtin.set_fact:
    icinga2_salt: "{{ ansible_local.icinga2.salt }}"
  when:
    - ansible_local.icinga2 is defined
    - ansible_local.icinga2.salt is defined
    - ansible_local.icinga2.salt | length != 0
    - icinga2_salt != ansible_local.icinga2.salt

- name: assert missing salt
  ansible.builtin.assert:
    that:
      - icinga2_salt | length != 0
    msg: icinga2 salt is missing
    quiet: true

- name: merge icinga2 configuration between defaults and custom
  ansible.builtin.set_fact:
    icinga2_filelogger: "{{ icinga2_defaults_filelogger | combine(icinga2_filelogger, recursive=True) }}"
    icinga2_api: "{{ icinga2_defaults_api | combine(icinga2_api, recursive=True) }}"
    icinga2_timeperiod: "{{ icinga2_defaults_timeperiod | combine(icinga2_timeperiod, recursive=True) }}"

- name: no archlinux
  when:
    - ansible_os_family | lower != 'archlinux'
  block:
    - name: find OS specific plugins directory
      ansible.builtin.find:
        paths: "/usr/lib/monitoring-plugins,/usr/lib/nagios,/usr/lib64/nagios"
        file_type: directory
        patterns:
          - "plugins"
        recurse: true
      register: found_directory

    - name: define monitoring_plugins_directory
      ansible.builtin.set_fact:
        monitoring_plugins_directory: "{{ found_directory.files | sort(attribute='path', reverse=True) | map(attribute='path') | list | first }}"
      when:
        - found_directory.files is defined
        - found_directory.files | count > 0

...
