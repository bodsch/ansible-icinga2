---

- name: re-read ansible facts
  ansible.builtin.setup:

- name: include OS specific configuration
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian
        - "{{ ansible_os_family | lower }}.yml"
        - default.yml
      skip: true

- name: define primary icinga2 master
  ansible.builtin.set_fact:
    icinga2_primary_master: "{{ icinga2_masters | primary_master }}"

- name: define satellite zone
  when:
    - icinga2_mode == 'satellite'
  block:
    - name: define satellite zone, when icinga2_satellites are configured
      ansible.builtin.set_fact:
        icinga2_satellite_zone: "{{ icinga2_satellites | satellite_zone(ansible_fqdn) }}"
      when:
        - icinga2_satellites is defined
        - icinga2_satellites | count > 0

    - name: define satellite zone, when icinga2_satellites are empty
      ansible.builtin.set_fact:
        icinga2_satellite_zone: "{{ ansible_fqdn }}"
      when:
        - icinga2_satellites is defined
        - icinga2_satellites | count == 0

- name: assert missing primary master
  ansible.builtin.assert:
    that:
      - icinga2_primary_master | length != 0
    msg: primary icinga2 master is missing
    quiet: true

- name: assert wrong primary master
  ansible.builtin.assert:
    that: ansible_fqdn in (icinga2_masters | list) or
       icinga2_mode == 'master' and
       icinga2_primary_master == ansible_fqdn
    msg: primary icinga2 master is not identical with ansible_fqdn ('{{ icinga2_primary_master }}' vs. '{{ ansible_fqdn }}')
    quiet: true
  when:
    - icinga2_validate_primary_master
    - icinga2_mode == 'master'

- name: information
  ansible.builtin.debug:
    msg:
      - "fqdn           : {{ ansible_fqdn }}"
      - "mode           : {{ icinga2_mode }}"
      - "primary_master : {{ icinga2_primary_master }}"
      - "satellite_zone : {{ icinga2_satellite_zone | default({}) }}"
      - "certificate_cn : {{ icinga2_certificate_cn }}"
      - "masters        : {{ icinga2_masters | list }}"

# ----------------------------------------------------------------------------------

# read a present salt from ansible facts
#
- name: define icinga2_salt from local fact
  ansible.builtin.set_fact:
    icinga2_salt: "{{ ansible_local.icinga2.salt }}"
  when:
    - ansible_local.icinga2 is defined
    - ansible_local.icinga2.salt is defined
    - ansible_local.icinga2.salt | length != 0
    - icinga2_salt != ansible_local.icinga2.salt

- name: assert missing salt
  ansible.builtin.assert:
    that:
      - icinga2_salt | length != 0
    msg: icinga2 salt is missing
    quiet: true

- name: merge icinga2 configuration between defaults and custom
  ansible.builtin.set_fact:
    icinga2_filelogger: "{{ icinga2_defaults_filelogger | combine(icinga2_filelogger, recursive=True) }}"
    icinga2_api: "{{ icinga2_defaults_api | combine(icinga2_api, recursive=True) }}"
    icinga2_timeperiod: "{{ icinga2_defaults_timeperiod | combine(icinga2_timeperiod, recursive=True) }}"

- name: no archlinux
  when:
    - ansible_os_family | lower != 'archlinux'
  block:
    - name: find OS specific plugins directory
      ansible.builtin.find:
        paths: "/usr/lib/monitoring-plugins,/usr/lib/nagios,/usr/lib64/nagios"
        file_type: directory
        patterns:
          - "plugins"
        recurse: true
      register: found_directory

    - name: define monitoring_plugins_directory
      ansible.builtin.set_fact:
        monitoring_plugins_directory: "{{ found_directory.files | sort(attribute='path', reverse=True) | map(attribute='path') | list | first }}"
      when:
        - found_directory.files is defined
        - found_directory.files | count > 0

# ----------------------------------------------------------------------------------

# debian based
#
- name: based on debian
  when:
    - ansible_os_family | lower == 'debian'
    - icinga2_use_external_repo | bool
  block:
    - name: add icinga2 GPG key
      ansible.builtin.apt_key:
        id: F51A91A5EE001AA5D77D53C4C6E319C334410682
        url: https://packages.icinga.com/icinga.key

    - name: add icinga2 repo sources
      ansible.builtin.template:
        src: etc/apt/icinga2.list.j2
        dest: /etc/apt/sources.list.d/icinga2.list
        mode: 0644

# redhat based
#
- name: based on redhat
  when:
    - ansible_os_family | lower == 'redhat'
    - icinga2_use_external_repo | bool
  block:
    - name: import EPEL GPG key
      ansible.builtin.rpm_key:
        key: https://archive.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
        state: present

    - name: install EPEL repository
      ansible.builtin.yum_repository:
        name: epel
        state: present
        description: Extra Packages for Enterprise Linux {{ ansible_distribution_major_version }} - $basearch
        baseurl: http://download.fedoraproject.org/pub/epel/{{ ansible_distribution_major_version }}/$basearch
        gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
        metalink: https://mirrors.fedoraproject.org/metalink?repo=epel-{{ ansible_distribution_major_version }}&arch=$basearch&infra=$infra&content=$contentdir
        failovermethod: priority
        gpgcheck: 1
        enabled: 1

    - name: import icinga2 GPG key
      ansible.builtin.rpm_key:
        key: https://packages.icinga.com/icinga.key
        state: present

    - name: install icinga2 repository
      ansible.builtin.yum_repository:
        name: icinga-stable-release
        state: present
        description: ICINGA (stable release for epel)
        baseurl: https://packages.icinga.com/epel/$releasever/release/
        gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ICINGA
        gpgcheck: 1
        enabled: 1

# arch-linux based
#
- name: based on arch linux
  when:
    - ansible_os_family | lower == 'archlinux'
    - icinga2_use_external_repo | bool
  block:
    - name: install build tools
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      loop:
        - base-devel
        - cmake

    - name: create sudo rules for aur_builder
      ansible.builtin.copy:
        content: '%aur_builder ALL=(ALL) NOPASSWD: ALL'
        dest: /etc/sudoers.d/aur
        mode: 0640
        validate: visudo -cf %s

    - name: create build group
      ansible.builtin.group:
        name: aur_builder

    - name: create build user
      ansible.builtin.user:
        name: aur_builder
        group: aur_builder

- name: update package cache
  ansible.builtin.package:
    update_cache: true

- name: install requirements
  ansible.builtin.package:
    name: "{{ icinga2_requirements | union(icinga2_os_requirements) }}"
    state: present

- name: get latest system information
  ansible.builtin.setup:

- name: make sure ansible local facts directory exists
  ansible.builtin.file:
    dest: /etc/ansible/facts.d
    state: directory
    owner: root
    group: root
    mode: 0755

...
