---
name: master-satellite

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * 0"

defaults:
  run:
    working-directory: 'ansible-icinga2'

jobs:

  deb:
    name: "${{ matrix.image }} / python: ${{ matrix.python-version }}, ansible: ${{ matrix.ansible-version }}"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:11
        python-version:
          - '3.9'
        ansible-version:
          - '4.1.0'
          - '5.1.0'

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-icinga2'

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      # See: https://github.com/geerlingguy/ansible-role-mysql/issues/422
      - name: Disable AppArmor
        run: |
            sudo apt-get install apparmor-profiles
            sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
            sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: test master with satellite
        run: |
          tox -e py$(printf "${{ matrix.python-version }}" | tr -d '.')-ansible$(printf "${{ matrix.ansible-version }}" | tr -d '.') -- \
            molecule test --scenario-name master-satellite
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}
