#jinja2: trim_blocks: True, lstrip_blocks: True
// {{ ansible_managed }}
{% set _type = "" %}
{% if icinga2_notification_apply_rules  is defined and
      icinga2_notification_apply_rules | count > 0 %}
  {% for n, data in icinga2_notification_apply_rules.items() %}
    {% set data, _type, valid_data = icinga2_notification_apply_rules | apply_notification(n) %}
/*
    {{ data }}
    {{ _type }}
    {{ valid_data }}
*/

    {% set _users = data['users'] %}
    {% set _user_groups = data['user_groups'] %}
    // {{ (_users and _users | type == "str" and _users | length == 0) or
          (_users and _users | type == "list" and _users | count == 0) }}
    // {{ (_user_groups and _user_groups | type == "str" and _user_groups | length == 0) or
          (_user_groups and _user_groups | type == "list" and _user_groups | count == 0) }}

    {% if ((_users and _users | type == "str" and _users | length == 0) or
          (_users and _users | type == "list" and _users | count == 0)) and
          ((_user_groups and _user_groups | type == "str" and _user_groups | length == 0) or
          (_user_groups and _user_groups | type == "list" and _user_groups | count == 0)) %}
      {% set valid_data = false %}
      {% set _ = data.pop('users') %}
      {% set _ = data.pop('user_groups') %}

/*
 * You must define users OR user_groups for a valid notification!
 * The following apply rule is therefore deactivated for safety.
 */

/*
    {% endif %}
apply Notification "{{ n }}" to {{  _type | capitalize }} {

    {% for key, value in data.items() %}
      {% if key == 'import' %}
  import "{{ value }}"
      {% elif key in ['users', 'display_name', 'user_groups', 'interval'] and
              value | string | length > 0 %}
        {% if key in ['users', 'user_groups'] and
              value | type == "list" and
              value | count > 0 %}
  {{ key }} = [ "{{ value | join( '", "') }}" ]
        {% elif value | type == "str" %}
  {{ key }} = {{ value }}
        {% endif %}
      {% elif key == 'extra_parameters' %}
  {{ value | indent(2) }}
      {% elif key == 'assign_where' %}
  assign where {{ value }}
      {% elif key == 'ignore_where' %}
  ignore where {{ value }}
      {% endif %}
    {% endfor %}
}
    {% if not valid_data %}
*/
    {% endif %}

  {% endfor %}
{% endif %}
