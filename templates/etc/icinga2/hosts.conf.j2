#jinja2: trim_blocks: True, lstrip_blocks: True
// {{ ansible_managed }}
{% set endpoint = false %}
{% if icinga2_host_object is defined and
      icinga2_host_object | count != 0 %}
  {% for key, v in icinga2_host_object.items() %}
// {{ key }}
    {% if v['endpoint_name'] is defined %}
      {% set endpoint = true %}
      {% set _name = v['endpoint_name'] %}
      {% set _ = v.pop('endpoint_name') %}
    {% else %}
      {% set _name = key %}
    {% endif %}
    {% if v['zone'] is defined %}
      {% set _zone = v['zone'] %}
      {% set _ = v.pop('zone') %}
    {% endif %}
    {% if icinga2_masters[_name] is defined and
          icinga2_masters[_name]['ip'] is defined %}
      {% set _ip = icinga2_masters[_name]['ip'] %}
      {% set _ = v.pop('address') %}
    {% else %}
{# use you *functional* dns to resolve hostname.
  this runs on the ansible-host and not on the destination machine! #}
      {% set _ip = lookup('pipe', 'host ' + ansible_fqdn   + ' | grep "has address" | cut -d" " -f4') %}
    {% endif %}
    {% if v['display_name'] is defined %}
      {% set display_name = v['display_name'] %}
      {% set _ = v.pop('display_name') %}
    {% endif %}

object Host "{{ key }}" {
    {% if _ip is defined and
          _ip | length != 0 %}
  address = "{{ _ip }}"
    {% endif %}
    {% if display_name is defined %}
  display_name = "{{ display_name }}"
    {% endif %}
    {% if endpoint %}
  command_endpoint = "{{ _name }}"
    {% endif %}
    {% if _zone is defined %}
  zone = "{{ _zone }}"
    {% endif %}
    {% for ke,ve in v.items() | sort %}
      {% if ke == 'import' %}{{ ke }} "{{ ve }}"
      {% elif ke == 'groups' %}{{ ke }} = ["{{ ve | join('","') }}"]
      {% elif ke == 'vars' %}
  vars = {
    {{ ve | indent(4) }}
  }
      {% else %}
  {{ ke }} = "{{ ve }}"
      {% endif %}
    {% endfor %}

}

  {% endfor %}
{% endif %}
