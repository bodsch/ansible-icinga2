---
dependency:
  name: galaxy

driver:
  name: docker

# lint: |
#   set -e
#   yamllint .
#   ansible-lint .
#   flake8 .

platforms:
  - name: database
    image: "bodsch/ansible-debian:11"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    docker_host: "${DOCKER_HOST:-unix://run/docker.sock}"
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    docker_networks:
      - name: icinga_default
        ipam_config:
          - subnet: "10.11.0.0/24"
            gateway: "10.11.0.2"
    networks:
      - name: icinga_default
        ipv4_address: "10.11.0.10"

  - name: instance
    image: "bodsch/ansible-${DISTRIBUTION:-debian:11}"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    docker_host: "${DOCKER_HOST:-unix://run/docker.sock}"
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - name: icinga_default
        ipv4_address: "10.11.0.20"

provisioner:
  name: ansible
  ansible_args:
    - --diff
    - -v
  config_options:
    defaults:
      deprecation_warnings: true
      stdout_callback: yaml
      callbacks_enabled: profile_tasks
      # gathering: smart
      # fact_caching: jsonfile
      # fact_caching_timeout: 8640
      # fact_caching_connection: ansible_facts

#   name: install
#   ansible_args:
#     - --diff
#     - -v
#   config_options:
#     # Either via config option
#     config_options:
#       tags:
#         run: tag1,tag2,tag3
#     # or env
#     env:
#       ANSIBLE_RUN_TAGS: tag1,tag2,tag3
#     defaults:
#       deprecation_warnings: true
#       stdout_callback: yaml
#       callbacks_enabled: profile_tasks
#       gathering: smart
#       fact_caching: jsonfile
#       fact_caching_timeout: 8640
#       fact_caching_connection: ansible_facts

scenario:
  test_sequence:
    - destroy
    - dependency
    - create
    - prepare
    - converge
    - verify
    - destroy

verifier:
  name: testinfra
